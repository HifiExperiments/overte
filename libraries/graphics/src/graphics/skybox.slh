// glsl / C++ compatible source as interface for Light
#ifndef skybox_slh
#define skybox_slh
<@include gpu/Config.slh@>
<$VERSION_HEADER$>
<!
// <$_SCRIBE_FILENAME$>
//  Generated on <$_SCRIBE_DATE$>
//
//  Created by Sam Gondelman on 1/23/20
//  Copyright 2020 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//
!>
<@if not SKYBOX_SLH@>
<@def SKYBOX_SLH@>

struct Skybox {
    vec4 color;
};

// FIXME: For legacy reasons, when skybox.color.a is 0.5, this is equivalent to:
// skyboxColor * skyboxTexel
// It should actually be:
// mix(skyboxColor, skyboxTexel, skybox.color.a)
// and the blend factor should be user controlled
vec4 evalSkyboxColor(vec3 skyboxTexel, vec3 skyboxColor, float blend) {
    return vec4(mix(vec3(1.0), skyboxTexel, float(blend > 0.0)) *
                mix(vec3(1.0), skyboxColor, float(blend < 1.0)), 1.0);
}

#endif

<@endif@>
